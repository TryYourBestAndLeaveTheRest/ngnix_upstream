events {
    worker_connections 1024;
}

http {
    log_format upstreamlog '[$time_local] $remote_addr - $status - '
                           'upstream: $upstream_addr - '
                           'response_time: $upstream_response_time';

    access_log /var/log/nginx/access.log upstreamlog;
    error_log /var/log/nginx/error.log warn;

    upstream backend {
        server app_${ACTIVE_POOL}:3000 max_fails=2 fail_timeout=5s;
        server app_${BACKUP_POOL}:3000 backup max_fails=2 fail_timeout=5s;
    }

    server {
        listen 80;
        
        location / {
            proxy_pass http://backend;
            
            # CRITICAL: Retry on these conditions
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 4s;
            
            # Tight timeouts
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
            
            # Headers
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Disable buffering for immediate response
            proxy_buffering off;
            proxy_request_buffering off;
        }
    }
}