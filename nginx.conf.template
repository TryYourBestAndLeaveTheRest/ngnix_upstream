events {
    worker_connections 1024;
}

http {
    # Define upstream pools
    upstream backend {
        # Primary server (active pool)
        server app_${ACTIVE_POOL}:3000 max_fails=2 fail_timeout=5s;
        
        # Backup server (inactive pool)
        server app_${BACKUP_POOL}:3000 backup;
    }

    server {
        listen 80;
        server_name localhost;

        # Proxy timeouts
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;

        # Retry policy
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 5s;

        location / {
            proxy_pass http://backend;
            
            # Forward headers from upstream
            proxy_pass_request_headers on;
            
            # Preserve upstream headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Don't modify response headers
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }
    }
}
